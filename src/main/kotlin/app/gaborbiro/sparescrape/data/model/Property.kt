package app.gaborbiro.sparescrape.data.model

open class Property(
    val url: String,
    val senderName: String,
    val price: String,
    val pricePerMonth: String,
    val billIncluded: String,
    val deposit: String,
    val available: String,
    val minTerm: String,
    val maxTerm: String,
    val furnishings: String,
    val broadband: String,
    val livingRoom: String,
    val flatmates: String,
    val totalRooms: String,
    val householdGender: String,
    val preferredGender: String,
    val occupation: String,
    val location: LonLat?
)

class PropertyWithDistance(
    url: String,
    senderName: String,
    price: String,
    pricePerMonth: String,
    billIncluded: String,
    deposit: String,
    available: String,
    minTerm: String,
    maxTerm: String,
    furnishings: String,
    broadband: String,
    livingRoom: String,
    flatmates: String,
    totalRooms: String,
    householdGender: String,
    preferredGender: String,
    occupation: String,
    location: LonLat?,
    val distance: String
) : Property(
    url = url,
    senderName = senderName,
    price = price,
    pricePerMonth = pricePerMonth,
    billIncluded = billIncluded,
    deposit = deposit,
    available = available,
    minTerm = minTerm,
    maxTerm = maxTerm,
    furnishings = furnishings,
    broadband = broadband,
    livingRoom = livingRoom,
    flatmates = flatmates,
    totalRooms = totalRooms,
    householdGender = householdGender,
    preferredGender = preferredGender,
    occupation = occupation,
    location = location
) {
    constructor(property: Property, distance: String) : this(
        url = property.url,
        senderName = property.senderName,
        price = property.price,
        pricePerMonth = property.pricePerMonth,
        billIncluded = property.billIncluded,
        deposit = property.deposit,
        available = property.available,
        minTerm = property.minTerm,
        maxTerm = property.maxTerm,
        furnishings = property.furnishings,
        broadband = property.broadband,
        livingRoom = property.livingRoom,
        flatmates = property.flatmates,
        totalRooms = property.totalRooms,
        householdGender = property.householdGender,
        preferredGender = property.preferredGender,
        occupation = property.occupation,
        location = property.location,
        distance = distance
    )
}